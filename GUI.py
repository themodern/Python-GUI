from tkinter import *import timefrom bs4 import BeautifulSoupimport calendarimport datetime as dtimport randomimport apply as applyimport urllib.requestimport webbrowserimport requestsdef raise_frame(frame):    frame.tkraise    ()LocationON = FalseuserLocation = ""Statistics = StringVar()def acceptLocation(frame):    global LocationON    LocationON = True    getLocation()    raise_frame(frame)def getLocation():    global userLocation    global Statistics    userLocation = requests.get("https://ipinfo.io/").json()    if userLocation ['country'] == "AU" :        url = 'https://www.worldometers.info/coronavirus/country/australia'## This is the GUI using tkinterScreen = Tk()Screen.geometry("600x750") # set GUI frame sizeScreen.title ("COVID-19") #set titleScreen.configure(bg = "blue") # define the background color#Location FrameLocation_Frame = Frame(Screen, bg = "blue", width = 600, height = 750)Location_Frame.grid_propagate(0)Location_Frame.grid(column = 0, row = 0, sticky = 'news')Applabel = Label(Location_Frame,                  text = "COVID-19",                  bg = "white",                  font = ('Courier', 20)                 ).grid(row = 0, column= 0)######################################################### Location Label########################################################Locationlabel = Label(Location_Frame,                       text = "Allow application to access your location",                      bg = "white",                       font = ('Courier', 16)                      ).grid(row = 0, column = 0)Button_No = Button(Location_Frame,                    text = 'NO',                    command = lambda: raise_frame(Notification_Frame),                   bg = 'blue',                    fg = 'black',                    font = ('Courier')).grid()Button_Yes = Button(Location_Frame,                     text = 'Yes',                     command = lambda: acceptLocation(Notification_Frame),                    bg = 'blue',                     fg = 'black',                     font = ('Courier')).grid()######################################################### Notification Frame########################################################Notification_Frame = Frame(Screen, bg = "blue", width = 600, height = 750)Notification.grid_propagate(0)Notification.grid(column = 0, row = 0, sticky = 'news')Notificationlabel = Label(Notification_Frame,                       text = "Allow notification?",                      bg = "white",                       font = ('Courier', 16)                      ).grid(row = 0, column = 0)Button_No = Button(Location_Frame,                     text = 'NO',                     command = lambda: raise_frame(mainframe),                    bg = 'blue',                     fg = 'black',                     font = ('Courier')).grid()Button_Yes = Button(Location_Frame,                     text = 'Yes',                     command = lambda: acceptNotification(mainframe),                    bg = 'blue',                     fg = 'black',                     font = ('Courier')).grid()Screen.mainloop()